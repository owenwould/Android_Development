//Note Java class due to the fact I wasn't able to exclude the ID (which would be redundant) from firestore in kotlin, after trying for several hours using get:Exclude
//@Exclude I just wasn't able to exclude the id even when it wasnt in the default constructor, problem due to kotlin auto generating a 
//Empty default constructor and getters and setters.

package com.example.firestoreinclass;

import com.google.firebase.firestore.Exclude;

public class BookJ {


    private String name;
    private String author;
    private String documentId;
    private Integer publicationYear;

    public BookJ() 
    {
    //Fire Store needs empty constructor
    }

    public BookJ(String name, String author, Integer year) {
        this.name = name;
        this.author = author;
        this.publicationYear = year;
    }

    public String getName() {
        return name;
    }

    public void setName(String name) {
        this.name = name;
    }

    public String getAuthor() {
        return author;
    }

    public void setAuthor(String author) {
        this.author = author;
    }
    @Exclude
    public String getDocumentId() {
        return documentId;
    }

    public void setDocumentId(String documentId) {
        this.documentId = documentId;
    }

    public Integer getPublicationYear() {
        return publicationYear;
    }

    public void setPublicationYear(Integer publicationYear) {
        this.publicationYear = publicationYear;
    }


}
